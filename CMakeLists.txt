cmake_minimum_required(VERSION 3.6)
project(zlib_1_2_8)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c99")
set(SOURCE_FILES adler32.c compress.c crc32.h crc32.c deflate.h deflate.c gzclose.c gzguts.h gzlib.c gzread.c gzwrite.c infback.c inffast.h inffast.c inffixed.h inflate.h inflate.c inftrees.h inftrees.c trees.h trees.c uncompr.c zconf.h zlib.h zutil.h zutil.c)

if(CYGWIN)
    # windows cygwin
    message("building for Cygwin")
else()
    # unix
    message("building for Unix")
endif()

add_library(zlib_Lib SHARED ${SOURCE_FILES})
set_target_properties(zlib_Lib PROPERTIES OUTPUT_NAME zlib)

add_library(zlib_Lib_Static ${SOURCE_FILES})
set_target_properties(zlib_Lib_Static PROPERTIES OUTPUT_NAME zlib)

add_executable(zlib_1_2_8 main.c)
set_target_properties(zlib_1_2_8 PROPERTIES OUTPUT_NAME zlib)
target_link_libraries(zlib_1_2_8 zlib_Lib_Static)

# install targets (executables, shared libraries, static libraries) in current project source directory
add_custom_target(Intall_${PROJECT_NAME}
        $(MAKE) install
        DEPENDS ${PROJECT_NAME}
        COMMENT "Installing ${PROJECT_NAME}")

if(CYGWIN)
    # windows cygwin
    set(RUNTIME_DEST_DIR ${CMAKE_SOURCE_DIR}/output/windows/bin)
    set(LIBRARY_DEST_DIR ${CMAKE_SOURCE_DIR}/output/windows/lib)
    set(ARCHIVE_DEST_DIR ${CMAKE_SOURCE_DIR}/output/windows/lib/static)
else()
    # unix
    set(RUNTIME_DEST_DIR ${CMAKE_SOURCE_DIR}/output/unix/bin)
    set(LIBRARY_DEST_DIR ${CMAKE_SOURCE_DIR}/output/unix/lib)
    set(ARCHIVE_DEST_DIR ${CMAKE_SOURCE_DIR}/output/unix/lib/static)
endif()

install(TARGETS zlib_1_2_8 zlib_Lib zlib_Lib_Static
        RUNTIME DESTINATION ${RUNTIME_DEST_DIR}
        LIBRARY DESTINATION ${LIBRARY_DEST_DIR}
        ARCHIVE DESTINATION ${ARCHIVE_DEST_DIR})